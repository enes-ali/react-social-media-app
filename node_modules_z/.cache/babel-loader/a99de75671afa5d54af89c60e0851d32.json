{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\enes_\\\\Desktop\\\\backtemp\\\\react\\\\posts\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Navbar from \"./Components/navbar.js\";\nimport LoginForm from './Components/login_form.js';\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { login } from \"./actions.js\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    if (this.props.account == null) {\n      axios.get(`http://localhost/api/user?token=${this.props.token}`).then(response => {\n        let account = response.data;\n        this.props.login(thsi.props.token, account, true);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state, oldProps) {\n  return {\n    token: state.token,\n    account: state.account\n  };\n}\n\nfunction mapPropsToDispatch(dispatch) {\n  return {\n    login: (token, account, auth) => dispatch(login(token, account, auth))\n  };\n}\n\nexport default connect(mapStateToProps, mapPropsToDispatch)(App);","map":{"version":3,"sources":["C:/Users/enes_/Desktop/backtemp/react/posts/src/App.js"],"names":["React","BrowserRouter","Route","Navbar","LoginForm","axios","connect","login","App","Component","componentDidMount","props","account","get","token","then","response","data","thsi","catch","error","console","log","render","mapStateToProps","state","oldProps","mapPropsToDispatch","dispatch","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,cAApB;;AAGA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAiC;AAE/BC,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKC,KAAL,CAAWC,OAAX,IAAsB,IAAzB,EAA8B;AAC5BP,MAAAA,KAAK,CAACQ,GAAN,CAAW,mCAAkC,KAAKF,KAAL,CAAWG,KAAM,EAA9D,EACCC,IADD,CACOC,QAAD,IAAc;AAChB,YAAIJ,OAAO,GAAGI,QAAQ,CAACC,IAAvB;AACA,aAAKN,KAAL,CAAWJ,KAAX,CAAiBW,IAAI,CAACP,KAAL,CAAWG,KAA5B,EAAmCF,OAAnC,EAA4C,IAA5C;AACH,OAJD,EAKCO,KALD,CAKQC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAPD;AAQD;AACF;;AAEDG,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEnB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAvB8B;;AA2BjC,SAASoB,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAAyC;AACvC,SAAM;AACJZ,IAAAA,KAAK,EAAEW,KAAK,CAACX,KADT;AAEJF,IAAAA,OAAO,EAAEa,KAAK,CAACb;AAFX,GAAN;AAID;;AAED,SAASe,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAM;AACJrB,IAAAA,KAAK,EAAE,CAACO,KAAD,EAAQF,OAAR,EAAiBiB,IAAjB,KAAyBD,QAAQ,CAACrB,KAAK,CAACO,KAAD,EAAQF,OAAR,EAAiBiB,IAAjB,CAAN;AADpC,GAAN;AAGD;;AAED,eAAevB,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from \"./Components/navbar.js\";\nimport LoginForm from './Components/login_form.js';\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./actions.js\"\n\n\nclass App extends React.Component{\n\n  componentDidMount(){\n    if(this.props.account == null){\n      axios.get(`http://localhost/api/user?token=${this.props.token}`)\n      .then((response) => {\n          let account = response.data;\n          this.props.login(thsi.props.token, account, true);\n      })\n      .catch((error) => {\n          console.log(error);\n      });\n    }\n  }\n\n  render(){\n    return(\n      <BrowserRouter>\n        <Navbar />\n        <Route exact path=\"/login\" component={LoginForm}/>\n        \n      </BrowserRouter>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state, oldProps){\n  return{\n    token: state.token,\n    account: state.account,\n  }\n}\n\nfunction mapPropsToDispatch(dispatch){\n  return{\n    login: (token, account, auth)=> dispatch(login(token ,account, auth)),\n  }\n}\n\nexport default connect(mapStateToProps, mapPropsToDispatch)(App);"]},"metadata":{},"sourceType":"module"}